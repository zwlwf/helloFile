#include <unistd.h>
#include <stdio.h>
#include <string.h>
#include <stdlib.h>
#include <arpa/inet.h>
#include <sys/socket.h>
#include <netinet/in.h>
#include "server_work.h"
#include "queue_vector.h"

int main() {
	queue Q;
	queue_init(&Q, 20);
	int sock = socket( AF_INET, SOCK_STREAM, 0);
	struct sockaddr_in addr;
	memset(&addr, 0, sizeof(addr) );
	addr.sin_family = AF_INET;
	addr.sin_addr.s_addr = htonl( INADDR_ANY );
	addr.sin_port = htons( 6666 );
	bind(sock, (struct sockaddr*)&addr, sizeof(addr) );
	listen(sock, 20);
	
	while(1) {
		struct sockaddr_in client_addr;
		int client_addr_size;
		int client_sock = accept(sock, (struct sockaddr*)&client_addr, &client_addr_size);
		// dealing with onth
		work( client_sock, (void*)&Q );
	}
	close(sock);
}
